!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common/http"),require("@angular/core")):"function"==typeof define&&define.amd?define("view-more-directive",["exports","@angular/common/http","@angular/core"],t):t(e["view-more-directive"]={},e.ng.common.http,e.ng.core)}(this,function(e,o,t){"use strict";var i=function(){function e(e){this.http=e,this.name="hi",this.showReadmore=!1}return e.prototype.ngOnInit=function(){console.log("height equal");var e=new FormData;e.append("name","vaibhav"),e.append("email","test@test.com");var t={headers:(new o.HttpHeaders).set("Content-Type","application/x-www-form-urlencoded")};this.http.post("http://192.168.15.160:8000/api/reg",e,t).subscribe(function(e){console.log("res",e)})},e.prototype.showMore=function(e){this.showReadmore=e,console.log(e)},e.decorators=[{type:t.Component,args:[{selector:"my-app",template:'<p view-more  viewHeight="60" (showMore)="showMore($event)" > \n  A directive allows you to attach a behavior to DOM elements. This behavior could be as simple or as complex as you’d like.*ngFor and *ngIf are examples of built-in directives in Angular. In this article, I will show you how to make a custom Google place autocomplete directive that you can attach to any text input.\n  A directive allows you to attach a behavior to DOM elements. This behavior could be as simple or as complex as you’d like.*ngFor and *ngIf are examples of built-in directives in Angular. In this article, I will show you how to make a custom Google place autocomplete directive that you can attach to any text input.\n  A directive allows you to attach a behavior to DOM elements. This behavior could be as simple or as complex as you’d like.*ngFor and *ngIf are examples of built-in directives in Angular. In this article, I will show you how to make a custom Google place autocomplete directive that you can attach to any text input.\n  A directive allows you to attach a behavior to DOM elements. This behavior could be as simple or as complex as you’d like.*ngFor and *ngIf are examples of built-in directives in Angular. In this article, I will show you how to make a custom Google place autocomplete directive that you can attach to any text input.\n</p>\n',styles:["p{font-family:Lato}"]}]}],e.ctorParameters=function(){return[{type:o.HttpClient}]},e}(),n=function(){function e(e){this.elRef=e,this.showMore=new t.EventEmitter,this.toggleShowMore=!1,this.isInsertedViewMoreBtn=!1,this.element=e.nativeElement}return e.prototype.ngOnChanges=function(e){},e.prototype.ngOnInit=function(){console.log("height equal",this.viewHeight,this.element.offsetHeight)},e.prototype.ngAfterViewChecked=function(){if(this.actualHeight=this.element.offsetHeight+10,!this.isInsertedViewMoreBtn&&this.element.offsetHeight>this.viewHeight){console.log("height equal");var e=document.createElement("p"),t=document.createElement("span"),o=document.createTextNode("view More...");t.appendChild(o),e.appendChild(t),e.setAttribute("style","text-align: right;"),t.setAttribute("id","text_view"),t.setAttribute("style","cursor:pointer;"),this.element.parentNode.insertBefore(e,this.element.nextSibling),this.toggleEventOnViewMore(t),this.isInsertedViewMoreBtn=!0}},e.prototype.toggleEventOnViewMore=function(e){var t,o=this;this.element.setAttribute("style","overflow: hidden;\n    height: "+this.viewHeight+"px;\n    transition: height 1s ease;\n    "),(t=document.createElement("style")).setAttribute("id","style_view_more"),t.textContent=".view_more {\n      height: "+this.actualHeight+"px !important;\n    }  \n",this.element.style.animationDirection="",this.element.appendChild(t),e.addEventListener("click",function(){o.toggleShowMore?(console.log("viewless"),o.element.classList.remove("view_more"),document.getElementById("text_view").innerHTML="view more...",o.toggleShowMore=!o.toggleShowMore,o.showMore.emit(!1)):(console.log("viewmore"),document.getElementById("text_view").innerHTML="view less...",o.element.classList.add("view_more"),o.toggleShowMore=!o.toggleShowMore,o.showMore.emit(!0))})},e.prototype.ngOnDestroy=function(){document.getElementById("style_view_more")&&document.getElementById("style_view_more").remove()},e.decorators=[{type:t.Directive,args:[{selector:"[view-more]"}]}],e.ctorParameters=function(){return[{type:t.ElementRef}]},e.propDecorators={viewHeight:[{type:t.Input}],showMore:[{type:t.Output}]},e}(),r=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[],declarations:[i,n],bootstrap:[i],exports:[n]}]}],e}();e.ViewMoreDirectiveModule=r,e.ɵa=i,e.ɵb=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=view-more-directive.umd.min.js.map